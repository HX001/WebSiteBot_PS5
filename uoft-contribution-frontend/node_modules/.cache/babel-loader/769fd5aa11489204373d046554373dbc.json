{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\isamu\\\\Desktop\\\\GITHUB repos\\\\WebSiteBot_PS5\\\\uoft-contribution-frontend\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport Axios from 'axios';\nimport { URL, TOKEN_KEY, ID, PASSWORD } from '../constants';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.RegisterSchema = yup.object({\n      email: yup.string().email('Invalid email address').required('Email is required'),\n      password: yup.string().required('Password is required'),\n      confirm_password: yup.string().oneOf([yup.ref('password'), null], \"Password does not match\").required('Password confirm is required')\n    });\n    this.LoginSchema = yup.object({\n      email: yup.string().email('Invalid email address').required('Email is required'),\n      password: yup.string().required('Password is required')\n    });\n\n    this.switchToRegister = () => {\n      this.props.showLoginForm(false);\n      this.props.showRegisterForm(true);\n    };\n\n    this.switchToLogin = () => {\n      this.props.showRegisterForm(false);\n      this.props.showLoginForm(true);\n    };\n\n    this.hideRegisterForm = () => {\n      this.props.showRegisterForm(false);\n    };\n\n    this.hideLoginForm = () => {\n      this.props.showLoginForm(false);\n    };\n\n    this.handleSubmitLogin = (event, {\n      setSubmitting\n    }) => {\n      console.log(\"I'm in Login\");\n      const url = `${URL}/users/login`;\n      Axios({\n        method: 'POST',\n        url: url,\n        data: {\n          email: event.email,\n          password: event.password\n        }\n      }).then(response => {\n        console.log(\"Response is: \", response);\n\n        if (response.data.status === \"success\") {\n          // localStorage.setItem(TOKEN_KEY, response.data.token);\n          localStorage.setItem(ID, event.email);\n          alert(\"Login Success\");\n          this.props.loggedIn();\n          this.props.showLoginForm(false);\n        } else {\n          if (response.data.message === \"Username does not exist\") {\n            alert(\"Username does not exist\");\n          } else if (response.data.message === \"Password not matched\") {\n            alert(\"Wrong password\");\n          }\n\n          console.log(\"Login failed\");\n        }\n\n        setSubmitting(false);\n      }).catch(err => {\n        console.log(\"Login failed\");\n      });\n    };\n\n    this.handleSubmitRegister = event => {\n      console.log(\"I'm in register\");\n      const url = `${URL}/users/register`;\n      Axios({\n        method: 'POST',\n        url: url,\n        data: {\n          email: event.email,\n          password: event.password,\n          userName: event.userName\n        }\n      }).then(response => {\n        if (response.data.status === \"success\") {\n          this.switchToLogin();\n        } else {\n          if (response.data.message === \"Username already exists\") {\n            alert(\"This email has been registered. Please log in\");\n          }\n        }\n      }).catch(response => {\n        console.log('failed');\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \".login\",\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.props.isLoginForm,\n        onHide: this.hideLoginForm,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            validationSchema: this.LoginSchema,\n            onSubmit: this.handleSubmitLogin,\n            initialValues: {\n              email: '',\n              password: ''\n            },\n            children: ({\n              handleSubmit,\n              handleChange,\n              touched,\n              errors\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              noValidate: true,\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"Enter email\",\n                  name: \"email\",\n                  onChange: handleChange,\n                  isInvalid: !!errors.email && touched.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"Password\",\n                  name: \"password\",\n                  onChange: handleChange,\n                  isInvalid: !!errors.password && touched.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"sm\",\n                block: \"true\",\n                variant: \"link\",\n                onClick: this.switchToRegister,\n                children: \"Not registered? Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(Button, {\n                block: \"true\",\n                className: \"Submit_Buttom\",\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.props.isRegisterForm,\n        onHide: this.hideRegisterForm,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            validationSchema: this.RegisterSchema,\n            onSubmit: this.handleSubmitRegister,\n            initialValues: {\n              email: '',\n              password: '',\n              confirm_password: ''\n            },\n            children: ({\n              handleSubmit,\n              handleChange,\n              touched,\n              errors\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              noValidate: true,\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formUserName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"Enter email\",\n                  name: \"email\",\n                  onChange: handleChange,\n                  isInvalid: !!errors.email && touched.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"We'll never share your email with anyone else.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"UserName\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"UserName\",\n                  name: \"userName\",\n                  onChange: handleChange,\n                  isInvalid: !!errors.userName && touched.userName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.userName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"Password\",\n                  name: \"password\",\n                  onChange: handleChange,\n                  isInvalid: !!errors.password && touched.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formConfirmPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"Password\",\n                  name: \"confirm_password\",\n                  onChange: handleChange,\n                  isInvalid: !!errors.confirm_password && touched.confirm_password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.confirm_password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"sm\",\n                block: \"true\",\n                variant: \"link\",\n                onClick: this.switchToLogin,\n                children: \"Already Registered? Log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 37\n              }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(Button, {\n                block: \"true\",\n                className: \"Submit_Buttom\",\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Join Us!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/isamu/Desktop/GITHUB repos/WebSiteBot_PS5/uoft-contribution-frontend/src/components/Login.js"],"names":["React","Component","Modal","Button","Form","Formik","yup","Axios","URL","TOKEN_KEY","ID","PASSWORD","Login","RegisterSchema","object","email","string","required","password","confirm_password","oneOf","ref","LoginSchema","switchToRegister","props","showLoginForm","showRegisterForm","switchToLogin","hideRegisterForm","hideLoginForm","handleSubmitLogin","event","setSubmitting","console","log","url","method","data","then","response","status","localStorage","setItem","alert","loggedIn","message","catch","err","handleSubmitRegister","userName","render","isLoginForm","handleSubmit","handleChange","touched","errors","isRegisterForm"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Axios from 'axios';\r\nimport { URL, TOKEN_KEY, ID, PASSWORD} from '../constants';\r\n\r\nclass Login extends Component {\r\n\r\n    //Schemas used to validate input of form.\r\n    RegisterSchema = yup.object({\r\n        email: yup.string().email('Invalid email address').required('Email is required'),\r\n        password: yup.string().required('Password is required'),\r\n        confirm_password: yup.string()\r\n            .oneOf([yup.ref('password'), null], \"Password does not match\")\r\n            .required('Password confirm is required'),\r\n    })\r\n    LoginSchema = yup.object({\r\n        email: yup.string().email('Invalid email address').required('Email is required'),\r\n        password: yup.string().required('Password is required'),\r\n    })\r\n\r\n    //When forms close, need to set the state of its parent(App) back to false.\r\n\r\n    switchToRegister = () => {\r\n        this.props.showLoginForm(false);\r\n        this.props.showRegisterForm(true);\r\n    }\r\n\r\n    switchToLogin = () => {\r\n        this.props.showRegisterForm(false);\r\n        this.props.showLoginForm(true);\r\n    }\r\n\r\n    hideRegisterForm = () => {\r\n        this.props.showRegisterForm(false);\r\n    };\r\n\r\n    hideLoginForm = () => {\r\n        this.props.showLoginForm(false);\r\n    }\r\n\r\n    //This function is to send the login request message to the back end server with corresponding messages: password, email address\r\n    //email address should be unique\r\n    handleSubmitLogin = (event, { setSubmitting }) => {\r\n        console.log(\"I'm in Login\")\r\n        const url = `${URL}/users/login`;\r\n        Axios({\r\n            method: 'POST',\r\n            url: url,\r\n            data: {\r\n                email: event.email,\r\n                password: event.password            }\r\n        })\r\n            .then(\r\n                response => {\r\n                    console.log(\"Response is: \", response)\r\n                    if (response.data.status === \"success\") {\r\n                        // localStorage.setItem(TOKEN_KEY, response.data.token);\r\n                        localStorage.setItem(ID, event.email);\r\n                        alert(\"Login Success\")\r\n                        this.props.loggedIn();\r\n                        this.props.showLoginForm(false);\r\n                    } else {\r\n                        if (response.data.message === \"Username does not exist\") {\r\n                            alert(\"Username does not exist\")\r\n                        } else if (response.data.message === \"Password not matched\") {\r\n                            alert(\"Wrong password\")\r\n                        }\r\n\r\n                        console.log(\"Login failed\");\r\n                    }\r\n                    setSubmitting(false);\r\n                }\r\n            )\r\n            .catch(\r\n                err => {\r\n                    console.log(\"Login failed\");\r\n                }\r\n            )\r\n    }\r\n\r\n    //This function is to send the register request message to the back end server with corresponding messages: username, password, email address\r\n    //email address should be unique\r\n    handleSubmitRegister = (event) => {\r\n        console.log(\"I'm in register\")\r\n        const url = `${URL}/users/register`\r\n        Axios({\r\n            method: 'POST',\r\n            url: url,\r\n            data: {\r\n                email: event.email,\r\n                password: event.password,\r\n                userName: event.userName\r\n            }\r\n        })\r\n            .then(\r\n                response => {\r\n                    if (response.data.status === \"success\") {\r\n                        this.switchToLogin();\r\n                    } else {\r\n                        if (response.data.message === \"Username already exists\") {\r\n                            alert(\"This email has been registered. Please log in\")\r\n                        }\r\n                    }\r\n                }\r\n            )\r\n            .catch(\r\n                response => {\r\n                    console.log('failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\".login\">\r\n                {/* Modal is the pop up window */}\r\n                {<Modal show={this.props.isLoginForm} onHide={this.hideLoginForm}>\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Sign In</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {/* Formik and yup are used to validate input of form */}\r\n                        <Formik\r\n                            validationSchema={this.LoginSchema}\r\n                            onSubmit={this.handleSubmitLogin}\r\n                            initialValues={{\r\n                                email: '',\r\n                                password: '',\r\n                            }}\r\n                        >\r\n                            {/* Form start here */}\r\n                            {({ handleSubmit,\r\n                                  handleChange,\r\n                                  touched,\r\n                                  errors }) => (<Form noValidate onSubmit={handleSubmit}>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Email address</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            placeholder=\"Enter email\"\r\n                                            name='email'\r\n                                            onChange={handleChange}\r\n                                            isInvalid={!!errors.email && touched.email}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.email}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            name='password'\r\n                                            onChange={handleChange}\r\n                                            isInvalid={!!errors.password && touched.password}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.password}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n\r\n                                    <Button size=\"sm\" block=\"true\" variant=\"link\" onClick={this.switchToRegister}>\r\n                                        Not registered? Sign up\r\n                                    </Button> {' '}\r\n                                    <Button block=\"true\" className=\"Submit_Buttom\" variant=\"primary\" type=\"submit\">\r\n                                        Log in\r\n                                    </Button>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </Modal.Body>\r\n                </Modal>}\r\n\r\n                {<Modal show={this.props.isRegisterForm} onHide={this.hideRegisterForm}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Register</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Formik\r\n                            validationSchema={this.RegisterSchema}\r\n                            onSubmit={this.handleSubmitRegister}\r\n                            initialValues={{\r\n                                email: '',\r\n                                password: '',\r\n                                confirm_password: '',\r\n                            }}\r\n                        >\r\n                            {({ handleSubmit,\r\n                                  handleChange,\r\n                                  touched,\r\n                                  errors }) => (<Form noValidate onSubmit={handleSubmit}>\r\n                                    <Form.Group controlId=\"formUserName\">\r\n                                        <Form.Label>Email Address</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            placeholder=\"Enter email\"\r\n                                            name='email'\r\n                                            onChange={handleChange}\r\n                                            isInvalid={!!errors.email && touched.email}\r\n                                        />\r\n                                        <Form.Text className=\"text-muted\">\r\n                                            We'll never share your email with anyone else.\r\n                                        </Form.Text>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.email}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>UserName</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"UserName\"\r\n                                            name='userName'\r\n                                            onChange={handleChange}\r\n                                            isInvalid={!!errors.userName && touched.userName}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.userName}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            name='password'\r\n                                            onChange={handleChange}\r\n                                            isInvalid={!!errors.password && touched.password}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.password}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formConfirmPassword\">\r\n                                        <Form.Label>Confirm Password</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            name='confirm_password'\r\n                                            onChange={handleChange}\r\n                                            isInvalid={!!errors.confirm_password && touched.confirm_password}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.confirm_password}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                    <Button size=\"sm\" block=\"true\" variant=\"link\" onClick={this.switchToLogin}>\r\n                                        Already Registered? Log in\r\n                                    </Button> {' '}\r\n                                    <Button block=\"true\" className=\"Submit_Buttom\" variant=\"primary\" type=\"submit\">\r\n                                        Join Us!\r\n                                    </Button>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </Modal.Body>\r\n                </Modal>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}